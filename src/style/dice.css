/* 1) Two-column flex layout; columns don’t affect each other’s height */
.player-edit-container {
    display: flex;
    align-items: flex-start; /* don’t stretch columns to same height */
    gap: 16px;
    /* remove earlier absolute sidebar approach */
    /* position: relative;
    padding-right: clamp(240px, 28vw, 360px); */
}

/* 2) Players live in their own responsive grid in the left column */
.players-column {
    flex: 1 1 auto;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 16px;
}

/* 3) Dice as a fixed-width sidebar on the right */
.die-container {
    position: sticky; /* keep visible while scrolling players */
    top: 0;
    align-self: flex-start; /* don’t stretch to players’ height */

    flex: 0 0 clamp(240px, 28vw, 360px);
    width: clamp(240px, 28vw, 360px);
    margin: 0;

    display: grid;
    grid-template-columns: 1fr 1fr; /* 2 x N */
    grid-auto-rows: minmax(44px, auto);
    gap: 8px;
    place-items: center;

    max-height: 80vh; /* scroll internally if tall */
    overflow: auto;
}

/* 4) Responsive: stack on small screens */
@media (max-width: 900px) {
    .player-edit-container {
        flex-direction: column;
    }
    .die-container {
        position: static;
        width: 100%;
        flex: 0 0 auto;
        max-height: none;
        overflow: visible;
    }
}

/* keep existing child styles */
.die-button-container {
    height: auto;
    text-align: center;
}

.die-button {
    width: 5em;
}

.undo-button {
    width: 5em;
    text-align: center;
}